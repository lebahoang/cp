package main

import "fmt"

func min(a ...int) int {
	var k int = 1e9
	for _, x := range a {
		if k > x {
			k = x
		}
	}
	return k
}
func minimumWhiteTiles(f string, k int, cl int) int {
	// dp := [1003][1003]int{}
	n := len(f)
	if k*cl >= n {
		return 0
	}
	dp := make([][]int, n)
	for i := 0; i < n; i++ {
		dp[i] = make([]int, k+2)
	}
	for i := 0; i < n; i++ {
		if i-1 >= 0 {
			if f[i] == '1' {
				dp[i][0] = dp[i-1][0] + 1
			} else {
				dp[i][0] = dp[i-1][0]
			}
		} else {
			if f[i] == '1' {
				dp[i][0] = 1
			} else {
				dp[i][0] = 0
			}
		}
		// fmt.Println(i, 0, dp[i][0])
		dp[i][1] = 100000
		if i+1-cl >= 0 {
			if i-cl >= 0 {
				dp[i][1] = dp[i-cl][0]
			} else {
				dp[i][1] = 0
			}
			if i-1 >= 0 && i >= cl {
				if f[i] == '1' {
					dp[i][1] = min(dp[i][1], dp[i-1][1]+1)
				} else {
					dp[i][1] = min(dp[i][1], dp[i-1][1])
				}
			}
		}
		// fmt.Println(i, 1, dp[i][1])
	}
	for i := 0; i < n; i++ {
		for j := 2; j <= k; j++ {
			dp[i][j] = 100000
			if i+1 < cl {
				continue
			}
			dp[i][j] = min(dp[i][j], dp[i][j-1])
			if i-1 >= 0 {
				dp[i][j] = min(dp[i][j], dp[i-1][j-1])
				if f[i] == '1' {
					dp[i][j] = min(dp[i][j], dp[i-1][j]+1)
				} else {
					dp[i][j] = min(dp[i][j], dp[i-1][j])
				}
			}
			if i-cl+1 >= cl {
				dp[i][j] = min(dp[i][j], dp[i-cl][j-1])
			}
			if i > cl-1 && cl-1 > i-cl {
				dp[i][j] = min(dp[i][j], dp[cl-1][j-1])
			}
			// fmt.Println(i, j, dp[i][j])
		}
	}
	return dp[n-1][k]
}

func main() {
	// f := "10101010"
	// k := 8
	// cl := 2
	f := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
	k := 2
	cl := 501
	// f := "111111"
	// k := 2
	// cl := 4
	fmt.Println(minimumWhiteTiles(f, k, cl))
}
